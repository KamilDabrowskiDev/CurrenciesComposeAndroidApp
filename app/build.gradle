apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.dagger.hilt.android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.devtools.ksp'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

android {

    namespace 'com.currencies.compose.app'

    defaultConfig {
        applicationId "com.currencies.compose.app"
        minSdkVersion 27
        compileSdk 34
        targetSdkVersion 34
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.15"
    }

    kapt {
        correctErrorTypes true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    buildTypes {

        debug {

            buildConfigField "boolean", "VERBOSE_LOGS_ENABLED", "true"
            buildConfigField "boolean", "DEBUG_LOGS_ENABLED", "true"
            buildConfigField "boolean", "ERROR_LOGS_ENABLED", "true"
            buildConfigField "boolean", "MVI_LOGS_ENABLED", "true"
            buildConfigField "boolean", "HTTP_LOGS_ENABLED", "true"

            debuggable true
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {

            buildConfigField "boolean", "VERBOSE_LOGS_ENABLED", "false"
            buildConfigField "boolean", "DEBUG_LOGS_ENABLED", "false"
            buildConfigField "boolean", "ERROR_LOGS_ENABLED", "false"
            buildConfigField "boolean", "MVI_LOGS_ENABLED", "false"
            buildConfigField "boolean", "HTTP_LOGS_ENABLED", "false"

            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {

        //  ANDROID
        implementation 'androidx.core:core-ktx:1.13.1'
        implementation "androidx.activity:activity-ktx:1.9.3"
        implementation 'androidx.fragment:fragment-ktx:1.8.5'
        implementation 'androidx.appcompat:appcompat:1.7.0'
        implementation 'com.google.android.material:material:1.12.0'

        //  HILT
        implementation "com.google.dagger:hilt-android:$hilt_version"
        annotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"
        kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
        testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
        kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

        //  ASYNC
        def coroutines_version = "1.8.1"
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

        //  REST API
        implementation 'com.squareup.retrofit2:retrofit:2.11.0'
        implementation 'com.squareup.retrofit2:converter-moshi:2.11.0'
        implementation 'com.squareup.moshi:moshi:1.15.1'
        ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.15.1'
        implementation 'com.squareup.okhttp3:okhttp:4.10.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

        //  LIFECYCLE
        def lifecycle_version = "2.8.7"
        implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
        implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
        implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
        implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
        implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"

        //  DATES
        implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.4.0")

        //  UNIT TESTING
        testImplementation 'junit:junit:4.13.2'
        testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.10.1")
        testImplementation 'com.squareup.assertj:assertj-android:1.2.0'
        testImplementation 'androidx.test.ext:junit:1.2.1'
        testImplementation 'org.robolectric:robolectric:4.11.1'
        testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
        testImplementation 'io.mockk:mockk:1.13.13'
    }
}

kapt {
    correctErrorTypes true
}


dependencies {
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'

    implementation 'androidx.activity:activity-compose:1.9.3'
    implementation platform('androidx.compose:compose-bom:2024.12.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    runtimeOnly 'androidx.compose.animation:animation:1.7.6'
    implementation "androidx.navigation:navigation-compose:2.8.5"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.8.7"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")

    implementation("androidx.hilt:hilt-navigation-compose:1.2.0")

    androidTestImplementation platform('androidx.compose:compose-bom:2024.12.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}